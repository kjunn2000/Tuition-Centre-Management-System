<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QFJP+YrPCEaYR0iooFu3Z//Z
</value>
  </data>
</root>