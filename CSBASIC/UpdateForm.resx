<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAC3ALcDASIAAhEBAxEB/8QA
        HgABAAICAgMBAAAAAAAAAAAAAAgJBgcFCgEDBAL/xABHEAABAgUCAwMGCgcHBQEAAAABAgMABAUGEQch
        CBIxCRRBEyI4UXa0FRYjMjQ3UmFzdBkzQkNigbIXVWNnldHkGFNmkaaC/8QAGQEBAAMBAQAAAAAAAAAA
        AAAAAAIDBAEF/8QAJREAAgICAgEEAwEBAAAAAAAAAAECAxExBCFBMjNRcRIiQhMU/9oADAMBAAIRAxEA
        PwCH8IQj2zOIQhACEIQAhCEAIQjk7bti4rxrMtbtqUOeq9UnFcjEpJMKddcPjhKQTgDcnoBuY4DjI98v
        IT02247Kyb7yGhlxTbZUED7yOnSJ76AdmPOzZlrk4gKoZRnZxNu014F1Q68sxMJ2T6ilrJwfnpO0T8tC
        zbVsGgStrWZQJKjUqTTysyso0EIT6yfFSj1Kjkk7kkxms5UY9R7JqDeygWEW5cQfAHpPrIuauK10ps26
        XipxU1JMgyk04d8vy4IGSc5WgpVkkq5+kVva18NermgdQMvfttLFPW55OWq8nl6RmD4BLoA5VHB8xYSr
        bOMbxZXfCzWzji0auhCEXERCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAR+2WXpl5uXl2luuuqCG20JKlLUT
        gAAbkk+Eb+0B4J9Y9dzL1dqn/Fq13cKNaqbSkpdR65drZT33EYRsRzg7RZLoNwhaOaBMtTtv0X4VuJKc
        OV2pJS7M5I38kMcrKdyMIAJGylK6xRZyIV9bZJRbIMaAdnJqXqN3a4dU3XrKoC8LEstsGpzKfUGjswDv
        u55w+wQcxYtpJoXpdofRvgbTm1ZanFxITMzih5SbmiPF15XnK335chIzsBGfQjBZdOzei1RSEIjBr/x+
        aRaO95oNsPIvO52soMpIPjuksvp8vMDKcg5yhAUrIweXrFeOpHF9r/qXdUtdVQv+oUhVPe8tT5KjPLlJ
        aUVuPNSk5WcEjmcKlEEjODiJV8ec+9HHJIutj5apSqXXKdMUitU2VqEjNtlqYlZplLrTyD1StCgQoH1E
        RXvw/wDabzMv3e2uIGmGYbGG03FTWAHB98xLp2V6yprB2+YesT4tC9LSv+hS9zWVcUhWqXMj5Oak3g4j
        Pik43SoeKTgjoQIhOuVb7Opp6Ib6/wDZn2nc3ebk0MqDduVNWXFUWcWpcg8rqQ2vdbBO+3nI6ABA3ivf
        UXS7UDSavrtnUS1Z6iT6clCZhHybyRtztODKHE/xIJEX1Rj19afWTqZQHrXv22ZCt0x/qxNtc3IrGOdC
        vnNrHgpJCh4GLa+TKHUu0RcE9FBsInlr/wBmVW6R3m5NA6murSgy4qgVB1KZpsdcMPHCXB6kr5VYHzlk
        xByuUGt2xVpmhXHSJyl1KTX5OYlJxhTLzSvUpCgCP5xuhZGxZiytprZ8EIQiw4IQhACEIQAhCEAIQifn
        BdwHWveVqU3WDWZl2elaoO80ihJWptpbAPmvTChhSgvHMlAIHLgqKublELLI1rMjqWSKGi/Djq1r1U+5
        6f2y47JNr5JmqzWWZGW9fO6RurcHkQFLxvy4ix3QDs+dJtJe71+9UN3tcreFh2dZAkZZfX5KXOQog/tu
        cx2BAQYk7SKPSbfpktRaFS5SnU+TbDUvKyjKWmWUDolKEgBI+4CPsjz7ORKfS6RaopHgAJASkAADAA8I
        8xhWqWsumujFCNwaj3XJ0lhQPkGVq55iZUP2Wmk5W4dxnAwM5JA3iu3iA7STUC++827o9LP2dRF5Qagp
        QVVJhHrChlMvn+AlYxssdIhXTKzR1ySJya68V+j2gEq4zdleE7XeTmZodOKXZxeRsVjPK0k9eZZGRnlC
        jtFbWv8Axy6w6495oktOG1LWeyn4Jprygt9B8Jh/ZTv3pASg7ZTkZiPM1NzU9Muzs9MuzEw+tTjrzqyt
        biyclSlHcknckx6o3V8eNfb7ZU5NiEIyG2dPb4vKl1ut2ra1RqkhbkqJ2qzEsyVolGSccyyP5nAyeVK1
        Y5UqIvbxsiY9GZ6X6w6kaNV4XDpzdU5SJkkeWbQrmYmUj9l5pWUODc/OBxnIwd4wyEGk1hgtC0A7Sawr
        37tbmssozaFaXhsVJsqVTJhXrUTlUvk/aKkDBJWOkTLk5yUqEqzPSE0zMy0wgOMvMrC0OIIyFJUNiCOh
        EdfKNwaF8VWsGgE2hu0K+ZuiFfM/Q6hzPSTmTuUpyC0o9eZspJOM8w2jJZxU+4Fin8l2ca51i4fdKNdq
        T8G6iWuxNvtoKJapMfJTsrn/ALbwGcZ35VZQT1SY1tw/8dOj2twlqJUJwWldT2EfBdSeHk33D4S7+yXM
        nACSErPgk4zEj4xtSrffTJ9Mqf1+7O/VTS8zNf088re9ut5WUyzOKjLI/jYGfKAfabyTuShIiJq0LbWp
        txBSpJIUkjBBHgY7CUaE4geDLSHXuXmqnNUtFAupxBLVcp7YS4tzGxmGxhL46ZKsLwMBYjVXyvEyDh8F
        M8IyLUSxK/pjfFasC52kN1Ohza5R/kJKF43StBIBKVJKVJJA2UIx2Nqee0ViEIR0CEIQAi9jQVCGtDNO
        m20hKU2nSAABsB3NqKJ4va0I+o/Tz2UpPubUY+ZpFlZnMV98QfaaplnJu1tAKVzuIUppdxVNjzQRtmXl
        1dfuU6PX8mesWCR19Kh9Pmfxl/1GKuNXGbbl4OzbWjkbtvK6r9rsxc153BPVmqTRy7NTjxcWR4JGfmpH
        gkYAGwAjhoQj0NFQhCNq8O/Dte3EXeqLatloytNlShyrVd1sliRZJ6npzuKwQhsHKiD0SFKBtRWWNnjh
        44d734ir1RbNsNGVp0qUOVarOtksSDJPU9OZxWCENg5UQeiQpQuL0l0hsjRWyJSwrGpaZeQlxzPuuYU9
        OPEALeeVjz1qwPuAASAEgAedJNJLJ0UsmSsSxKYJWRlRzuurwXpt4gc7zy8DmWrA36AAAAJAAzOPMuud
        rwtF0Y4K2OODgdVaqp/WTRqkFVEPNMVuiS6N5DxVMMJH7nqVIH6vqPMyG4Jx2EiAoFKgCCMEHxitvjh4
        HVWwqf1k0ZpBNGPNM1uiSyN5HxVMMJH7nqVIH6vqPMyEX8fkZ/SZGUfKIIwhCNpWIk3w/wDHxq9o13ah
        XFMLvK12sIElUHj3qWR/gTByoAbYQvmTgYAT1iMkIjKEZrEkdTxovU0R1usnX6yEX3Yjk53NMwqSmWJt
        gtPS0ylCFqaUN0qIS4g5SVJPN1zkDP4h32W3o9Vz2vm/c5OJiR5NkVCbii5PKKfO0NbbRxXXYpCAkuS1
        NUsgfOPcmRk/yAH8ojfEku0P9K26fytN9zaiNsepV6F9FMtiEIRYcEIQgBF7WhH1H6eeylJ9zaiiWL2t
        CPqP089lKT7m1GPmaRZWZzHX0qH0+Z/GX/UY7BcdfSofT5n8Zf8AUYjw/wChYfPCEbX4dOHO9eIy9E25
        bjZlKXKFLlXq7jZUzIsk/wAudxWCENg5JBJwkKUNraissr2eOHXh0vbiMvVFt202ZSmShS5V6u62VMyL
        JP8ALncVghDYOVEEnCQpQuL0m0msrRWypKxLEpglZCVHM66rBem3iBzvPLwOdasDJ6AAAAJAA86T6T2V
        otZUlYliUwSkhKDmccVgvTTxA53nl4HOtWBk9AAAAEgAZjHmXXO19aLoxwIQhFBIR4ICgUqAIOxBjzCA
        K3OOHgdNtGf1l0ZpBNHJVM1yhyyPoPiqYl0j9z1K0D9X1HmZCIHx2EiAQQRkHqIre44eB024Z/WXRmkE
        0k80zXKHLI+heKpmXSP3PUrQPmbkeZkI3cfkZ/SZXKPlEDoQhG0rLT+y29Hque1837nJxMSId9lt6PVc
        9r5v3OTiYkeTf7jL46Kfu0P9K26fytN9zaiNsSS7Q/0rbp/K033NqI2x6VXoX0Uy2IQhFhwQhCAEXtaE
        fUfp57KUn3NqKJYva0I+o/Tz2UpPubUY+ZpFlZnMdfSofT5n8Zf9RjsFx19Kh9Pmfxl/1GI8P+hYehBQ
        FpLiSpORzAHBI+474/8AUTZ0o7RKytF7KkrEsThtEpT5Qcy3FXWFPTTxA53nl9yHO4rAyegAAACQAISw
        jXOuNixIgm1osJ/S0/5Af/Vf8OM60P7Rv+2XVW39Mv7HPgf4dfcZ778Ye8eR5WluZ8n3ZHNnkx84dYq8
        jefA/wClVp9+dmPdXopnx61FtIkpPJdBCEI80tEaU4qeJH/plsuk3f8AEz4yfClUFN7v8I9z8nlpxzn5
        vJOZ/V4xgdc52jdcQq7VP6mLU9qEe6TEWVRUppM5J4RhX6Wn/ID/AOq/4cD2tAIwdAMg/wDlX/DivaEe
        h/zVfBV+bM31ivWyNQr3m7tsXTr4kytQ+VmKW3UhNsJfJJUtnDLfk0HryYIBzjAwkYRCEXJYWERLT+y2
        9Hque1837nJxMSId9lt6PVc9r5v3OTiYkeVf7jL46Kfu0P8AStun8rTfc2ojbEku0P8AStun8rTfc2oj
        bHpVehfRTLYhCEWHBCEIARe1oR9R+nnspSfc2ooli9rQj6j9PPZSk+5tRj5mkWVmcx19Kh9Pmfxl/wBR
        jsFx19Kh9Pmfxl/1GI8P+hYfPCEI3FYjefA/6VWn352Y91ejRkbz4H/Sq0+/OzHur0Qs9D+jq2XQQhCP
        HLxEKu1T+pi1PahHukxE1YhV2qf1MWp7UI90mIto9xEZaKwYQhHrFIhCEAWn9lt6PVc9r5v3OTiYkQ77
        Lb0eq57XzfucnExI8m/3GXx0U/dof6Vt0/lab7m1EbYkl2h/pW3T+VpvubURtj0qvQvoplsQhCLDghCE
        AIvY0GWlzQ3TtaFBSVWnSCCDsR3NqKJ4sK4K+Oyzbds+k6O6xzhpJpKRKUmuLBVLql8+YzMEZLZRnlSv
        HJygc3Ly5Vl5UHOKa8E4PDLCYrr4g+zMqLLs3dOgVUM42tSnl29Ungl1OdyJeYVhKvuS5ggD56jtFhkh
        UJCqyTFTpc7LzknNNpdYmJdxLjbqCMhSVJJCgR0I2j6IxQslW8xLGkzr/XHbNw2fWZm3bqok7SanJr5H
        5ScYU062fvSoA4PUHoRuI42L1NXNCdLdcaP8EajWrLVBTaSmWnUDyc3K58Wnk+ckZ35d0nG4MVz6/wDZ
        z6m6a95uHTBx69reRzLLDTeKnLI6+c0NngNhzN+cdzyJEbq+TGfT6ZW4NEQ4yTTnUC4tLL1pd/2m6w3V
        qO4p2VU+0HGwpSFIOUnr5qjGOutOsOrYfbW242ooWhYIUlQOCCD0Ij8xoaz0yBKb9JNxO/3pb3+kI/3h
        +km4nf70t7/SEf7xFmEQ/wAa/g7+TJTfpJuJ3+9Le/0hH+8a81q4sNXtfbfkrZ1DnKW9I0+cE+yJSRSw
        oOhCkZJB3HKtW0achBVQi8pDLYhCNp6JcM+ruvtQDFiW4sU1Dnk5mszuWZCXPjlzB51DbzEBStxtjeJt
        qKyzmMmrIkXoBwNaw6492rczJ/FS1nsL+Fqk0oLfQfGXY2U79yiUoO+FEjETp0A4A9ItHRLV252EXnc7
        WFibn2R3SWX1+QlzlOQcYWvmVkZHL0iT8Y7OV4gWKHya50G0Ls/h7sNNh2a/PTEu5NLn5qZnXQt2YmVo
        QhS8ABKRytoASkYAHick7GhGktfuLnSLh/kn5auVhFWuUNky9BkHAuZUrHm+VIyGEHbde+MlKVYxGNKV
        kvlk+kV1doatCuK660pUCUS1NSoA9D3Jk4P8iP8A3EboybUzUGvaq37W9Q7mWg1KuTapl1LeeRsYCUNo
        zk8qEJSgZJOEiMZj1oL8YpMpbyxCEImcEIQgBCEIA2zohxQawaAzqTZNxKdpKl879Fn8vSL2TueTILaj
        4qbKVHbJI2iyLQHj10f1n7tQq7Mps653cIEhUXh3eYWfBiYICVEnGErCVEnACusVCQimyiNm9klJo7Cc
        Ip80A47NYdEu7UOpTZu61mcIFMqTyvKy7Y8JeY3U3gYASoKQB0SOsWR6GcVWj2v0ohuz6+JWtBHM/Q6h
        yszreOpSnJDqR9psqABGcHaMFlE6+/BYpJnHa9cHmjmvrb1QrdI+B7kUnzK5TEpbmFKxt5ZOOV8bAeeO
        bAwlSYrZ194LtY9BlzFVnKZ8YbYbJKa3TG1KbbR4F9vdTB6ZJyjJwFmLl48KSlaShaQpKhggjII9UK75
        V9bQcUzr2wi2PiA7PPSrVTvNwWAGrJuRzKyZVnNPmV/4jAx5Mn7TeOpJSsxXjqRwu65aXXXLWjcFg1Kb
        mag/3emv0xhc3L1Be+AytA85WBnkICwNykRvruhZorcWjVUZTp1pdqBqzX0Wzp3a09W59WCtMuj5NlJO
        Od1w4Q2n+JZAiY+gHZl1ysd2uXXuprpEmcOJoFPdSqacHUB94ZS0PWlHMrB+cgiLAbE08sjTGgM2vYNs
        yFDpjO4YlW+XnVjHOtR85xZAGVKJUfExXZyox6j2zqg3siBoB2aFpWv3a5Ncqg3clTThxNGlFKRT2VdQ
        HF7LfI2281HUELG8TXplLplEp8vSaNTpaQkZRsNS8tLMpaaaQOiUISAEgeoCPqjhbvvS07AoUxc163FI
        UWlyw+Umpx4NoB8EjPzlHwSMk9ADGGU5WPssSSOajBNWdcNMNEqL8N6jXVK01K0ky8oD5SamiPBplPnL
        3wCccozuQN4hTr/2nEw/3m2+H6llhvdtVxVJgFZ/il5dWw8CFO5/DHWII3NdNyXpWpm47trs9WKpOK5n
        5udfU66s+AKlHoOgHQDYbRor4spdz6IueNEr9f8AtHtSNQ+829pQy9ZdBXlBm0rBqkwn1lxOzAO2zeVD
        7ZBxEQJiYfm33JqafceeeWXHHHFFSlqJyVEncknxj1wjbCEYLEUVtt7EIQiZwQhCAEIQgBCEIAQhCAEe
        6TnJunTbM/T5p6WmZdaXWXmVlDjawchSVDcEHcER6YQBNDQHtJr+sju1u6ySj130VGGxUmylNTYT61E4
        TMf/ALKVnclZ6RYfpdrHptrNQhcOnN1ydXlwB5dpCuWYllH9l1pWFtnr1GD1BI3iiCOZtG87rsGuy9zW
        XcM/RapKnLc1JvFtYHik4+ck43ScgjYgxms40Z9x6ZNTaL+oRX3oB2nDLvdrb4gaWGl7NpuKmsZSf4pi
        XTuPvU0D9zY6xO617sti9qLL3HaFfkKzTJoZam5J9LravWMpOxHiDuOhEYZ1yrf7IsTT0ctHonZ2Tpso
        9P1GbZlZWXQXXn3nAhttAGSpSjsAB1JiOWvvHho7osJii0icTeFzt5T8HUx9JZYX6n5gZSjfYpSFrB6p
        HWK3dcuKfWHX6bWi8rhMtRgvnYolP5mZJvB2KkZJdUPtOFRG+MDaJ18eVnb6RxySJya/9pPYdk95tzRm
        TZu6so5m1VN0qTTGFdMpIwqYwfs8qDsQs9Irw1Q1h1I1lrpuHUa6pyrzIJ8i24rlYlkn9lppOENjp80D
        PU5O8YbCN9dMa9FTk2IQhFpwQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBHvl5+elG3GZWdfZQ6MOJb
        cKQsfeB1j0QgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCEIAQhCAEIQgBCE
        IAQhCAEIQgD/2Q==
</value>
  </data>
</root>